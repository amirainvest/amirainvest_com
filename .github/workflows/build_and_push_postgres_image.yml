name: Build and Push Postgres Image

env:
  AWS_REGION: us-east-1

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true


jobs:
  build_and_push_container:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Git pull
        run: git pull

      - name: Install Poetry
        run: pip3 install poetry

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 903791206266.dkr.ecr.us-east-1.amazonaws.com

      - name: Build DB container
        run: make build_postgres_docker

      - name: Kill containers
        run: make _down

      - name: Tag container version
        run: docker tag amirainvest/common/postgres:"$(poetry version -s)" 903791206266.dkr.ecr.us-east-1.amazonaws.com/amirainvest/common/postgres:"$(poetry version -s)"

      - name: Push to ECR
        run: docker push 903791206266.dkr.ecr.us-east-1.amazonaws.com/amirainvest/common/postgres:"$(poetry version -s)"

      - name: Tag container latest
        run: docker tag amirainvest/common/postgres:"$(poetry version -s)" 903791206266.dkr.ecr.us-east-1.amazonaws.com/amirainvest/common/postgres:latest

      - name: Push to ECR
        run: docker push 903791206266.dkr.ecr.us-east-1.amazonaws.com/amirainvest/common/postgres:latest

