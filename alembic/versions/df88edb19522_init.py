"""init

Revision ID: df88edb19522
Revises:
Create Date: 2021-12-30 18:11:20.310102

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'df88edb19522'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('financial_institutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('plaid_id', sa.String(), nullable=True),
    sa.Column('third_party_institution_id', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('plaid_id'),
    sa.UniqueConstraint('third_party_institution_id')
    )
    op.create_table('husk_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('twitter_user_id', sa.String(), nullable=True),
    sa.Column('youtube_channel_id', sa.String(), nullable=True),
    sa.Column('substack_username', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('fulfilled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('sub', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('picture_url', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('personal_site_url', sa.String(), nullable=True),
    sa.Column('linkedin_profile', sa.String(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('interests_value', sa.Boolean(), nullable=True),
    sa.Column('interests_growth', sa.Boolean(), nullable=True),
    sa.Column('interests_long_term', sa.Boolean(), nullable=True),
    sa.Column('interests_short_term', sa.Boolean(), nullable=True),
    sa.Column('interests_diversification_rating', sa.Integer(), nullable=True),
    sa.Column('benchmark', sa.String(), nullable=True),
    sa.Column('public_profile', sa.Boolean(), nullable=True),
    sa.Column('public_performance', sa.Boolean(), nullable=True),
    sa.Column('public_holdings', sa.Boolean(), nullable=True),
    sa.Column('public_trades', sa.Boolean(), nullable=True),
    sa.Column('is_claimed', sa.Boolean(), nullable=True),
    sa.Column('is_deactivated', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('broadcast_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscriber_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscriber_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('financial_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('plaid_id', sa.String(), nullable=True),
    sa.Column('official_account_name', sa.String(), nullable=True),
    sa.Column('user_assigned_account_name', sa.String(), nullable=True),
    sa.Column('available_to_withdraw', sa.DECIMAL(precision=19, scale=4), nullable=True),
    sa.Column('current_funds', sa.DECIMAL(precision=19, scale=4), nullable=True),
    sa.Column('mask', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('sub_type', sa.String(), nullable=True),
    sa.Column('limit', sa.DECIMAL(precision=19, scale=4), nullable=True),
    sa.Column('iso_currency_code', sa.String(), nullable=True),
    sa.Column('unofficial_currency_code', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('plaid_id')
    )
    op.create_table('historical_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'succeeded', 'failed', name='historicaljobsstatus'), nullable=False),
    sa.Column('retries', sa.Integer(), nullable=False),
    sa.Column('params', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('platform', sa.String(), nullable=True),
    sa.Column('platform_user_id', sa.String(), nullable=True),
    sa.Column('platform_post_id', sa.String(), nullable=True),
    sa.Column('profile_img_url', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('html', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('profile_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('securities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plaid_security_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ticker_symbol', sa.String(), nullable=True),
    sa.Column('isin', sa.String(), nullable=True),
    sa.Column('cusip', sa.String(), nullable=True),
    sa.Column('sedol', sa.String(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('plaid_institution_security_id', sa.String(), nullable=True),
    sa.Column('is_cash_equivalent', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('iso_currency_code', sa.String(), nullable=True),
    sa.Column('unofficial_currency_code', sa.String(), nullable=True),
    sa.Column('plaid_update_type', sa.String(), nullable=True),
    sa.Column('plaid_webhook_url', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['financial_institutions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('plaid_security_id'),
    sa.UniqueConstraint('ticker_symbol')
    )
    op.create_table('substack_users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('user_url', sa.String(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('username'),
    sa.UniqueConstraint('username')
    )
    op.create_table('twitter_users',
    sa.Column('twitter_user_id', sa.String(), nullable=False),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('profile_img_url', sa.String(), nullable=True),
    sa.Column('profile_url', sa.String(), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=True),
    sa.Column('following_count', sa.Integer(), nullable=True),
    sa.Column('tweet_count', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('twitter_user_id'),
    sa.UniqueConstraint('twitter_user_id')
    )
    op.create_table('user_media_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('error_at', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscriber_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscriber_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('youtubers',
    sa.Column('channel_id', sa.String(), nullable=False),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('channel_username', sa.String(), nullable=True),
    sa.Column('profile_img_url', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('subscriber_count', sa.Integer(), nullable=True),
    sa.Column('video_count', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('channel_id'),
    sa.UniqueConstraint('channel_id')
    )
    op.create_table('bookmarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('financial_account_current_holdings',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.Integer(), nullable=False),
    sa.Column('latest_price', sa.DECIMAL(precision=19, scale=4), nullable=False),
    sa.Column('latest_price_date', sa.DateTime(), nullable=True),
    sa.Column('institution_value', sa.DECIMAL(precision=19, scale=4), nullable=False),
    sa.Column('cost_basis', sa.DECIMAL(precision=19, scale=4), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('quantity', sa.DECIMAL(precision=19, scale=4), nullable=False),
    sa.Column('iso_currency_code', sa.String(), nullable=True),
    sa.Column('unofficial_currency_code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['financial_accounts.id'], ),
    sa.ForeignKeyConstraint(['security_id'], ['securities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('financial_account_transactions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('subtype', sa.String(), nullable=False),
    sa.Column('plaid_investment_transaction_id', sa.String(), nullable=False),
    sa.Column('posting_date', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('quantity', sa.DECIMAL(), nullable=False),
    sa.Column('value_amount', sa.DECIMAL(precision=19, scale=4), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=19, scale=4), nullable=False),
    sa.Column('fees', sa.DECIMAL(precision=19, scale=4), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('iso_currency_code', sa.String(), nullable=True),
    sa.Column('unofficial_currency_code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['financial_accounts.id'], ),
    sa.ForeignKeyConstraint(['security_id'], ['securities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'security_id', 'posting_date'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('plaid_investment_transaction_id')
    )
    op.create_table('post_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('post_likes',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('liked_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.create_table('post_reads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('time_read_seconds', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('security_prices',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('securities_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=19, scale=4), nullable=False),
    sa.Column('price_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['securities_id'], ['securities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('price_time', 'securities_id')
    )
    op.create_table('substack_articles',
    sa.Column('article_id', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['substack_users.username'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id'),
    sa.UniqueConstraint('article_id')
    )
    op.create_table('tweets',
    sa.Column('tweet_id', sa.String(), nullable=False),
    sa.Column('twitter_user_id', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('possibly_sensitive', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('retweet_count', sa.Integer(), nullable=True),
    sa.Column('reply_count', sa.Integer(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('quote_count', sa.Integer(), nullable=True),
    sa.Column('tweet_url', sa.String(), nullable=True),
    sa.Column('embed', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['twitter_user_id'], ['twitter_users.twitter_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tweet_id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('youtube_videos',
    sa.Column('video_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('embed_url', sa.String(), nullable=True),
    sa.Column('playlist_id', sa.String(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['youtubers.channel_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('video_id'),
    sa.UniqueConstraint('video_id')
    )
    op.create_table('tweet_annotations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tweet_id', sa.String(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('end', sa.Integer(), nullable=True),
    sa.Column('probability', sa.Integer(), nullable=True),
    sa.Column('annotation_type', sa.String(), nullable=True),
    sa.Column('normalized_text', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tweet_id'], ['tweets.tweet_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('tweet_cashtags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tweet_id', sa.String(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('end', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tweet_id'], ['tweets.tweet_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('tweet_hashtags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tweet_id', sa.String(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('end', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tweet_id'], ['tweets.tweet_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('tweet_mentions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tweet_id', sa.String(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('end', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tweet_id'], ['tweets.tweet_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('tweet_urls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tweet_id', sa.String(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('end', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('expanded_url', sa.String(), nullable=True),
    sa.Column('display_url', sa.String(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('unwound_url', sa.String(), nullable=True),
    sa.Column('images', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tweet_id'], ['tweets.tweet_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tweet_urls')
    op.drop_table('tweet_mentions')
    op.drop_table('tweet_hashtags')
    op.drop_table('tweet_cashtags')
    op.drop_table('tweet_annotations')
    op.drop_table('youtube_videos')
    op.drop_table('tweets')
    op.drop_table('substack_articles')
    op.drop_table('security_prices')
    op.drop_table('post_reads')
    op.drop_table('post_likes')
    op.drop_table('post_comments')
    op.drop_table('financial_account_transactions')
    op.drop_table('financial_account_current_holdings')
    op.drop_table('bookmarks')
    op.drop_table('youtubers')
    op.drop_table('user_subscriptions')
    op.drop_table('user_media_errors')
    op.drop_table('twitter_users')
    op.drop_table('substack_users')
    op.drop_table('securities')
    op.drop_table('posts')
    op.drop_table('historical_jobs')
    op.drop_table('financial_accounts')
    op.drop_table('broadcast_requests')
    op.drop_table('users')
    op.drop_table('husk_requests')
    op.drop_table('financial_institutions')
    # ### end Alembic commands ###
