version: "3.9"
services:

  simple:
    env_file:
      - local.env
    build:
      context: .
      dockerfile: Dockerfile


  amirainvest_com:
    env_file:
      - local.env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POSTGRES_DATABASE_URL_ENV: "postgresql://test:test@postgres:5432/test"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local
    volumes:
      - "$HOME/.aws/credentials:/home/default/.aws/credentials:ro"


  backend_amirainvest_com:
    env_file:
      - local.env
    build:
      context: .
      dockerfile: ./Dockerfiles/backend_amirainvest_com.Dockerfile
    environment:
      POSTGRES_DATABASE_URL_ENV: "postgresql://test:test@postgres:5432/test"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local
    stdin_open: true
    tty: true
    command: "/bin/bash"

  postgres:
    env_file:
      - local.env
    image: postgres:10-alpine
    volumes:
      - type: volume
        source: common_postgres_data
        target: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      PGPORT: "5432"
      POSTGRES_DB: "test"
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "test", "-U", "test" ]
      timeout: 40s
      interval: 2s
      retries: 20

    networks:
      - local

networks:
  local:
    driver: bridge
    name: local

volumes:
  common_postgres_data:
