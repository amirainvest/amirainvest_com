version: "3.9"
services:

  simple:
    build:
      context: .
      dockerfile: Dockerfile


  amirainvest_com:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: "local"
      DEBUG: "true"
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: "/creds"
    depends_on:
      ecs-local-endpoints:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      local:
      credentials_network:
        ipv4_address: 169.254.170.3
    ports:
      - "5000:5000"


  backend_amirainvest_com:
    build:
      context: .
      dockerfile: ./Dockerfiles/backend_amirainvest_com.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local
    stdin_open: true
    tty: true
    command: "/bin/bash"

  ecs-local-endpoints:
    # The Amazon ECS Local Container Endpoints Docker Image
    image: amazon/amazon-ecs-local-container-endpoints
    volumes:
      - /var/run:/var/run
      - $HOME/.aws/:/home/.aws/
    environment:
      HOME: "/home"
      AWS_PROFILE: "default"
    networks:
      credentials_network:
        ipv4_address: 169.254.170.2

  postgres:
    image: postgres:10-alpine
    volumes:
      - type: volume
        source: common_postgres_data
        target: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      PGPORT: "5432"
      POSTGRES_DB: "test"
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "test", "-U", "test" ]
      timeout: 40s
      interval: 2s
      retries: 20

    networks:
      - local

networks:
  local:
    driver: bridge
    name: local
  credentials_network:
    driver: bridge
    ipam:
      config:
        - subnet: 169.254.170.0/24
          gateway: 169.254.170.1

volumes:
  common_postgres_data:
